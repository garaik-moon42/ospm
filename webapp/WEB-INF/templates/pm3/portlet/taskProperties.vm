<script type="text/javascript" language="Javascript1.2">

    function openEmployeePicker() {
        var top = (window.event) ? window.event.screenY : 0;
        var left = (window.event) ? window.event.screenX : 0;
        #set($param="$project.getId()")
        var w = window.open("$history.ignore($link).baseURI$history.ignore($link.clear().setNavigationId('employeeMultiSelectForTask').setObjectId($position, $param))?callback=taskResourcePickerCallback",
                            "calendar",
                            "left=" + left + ", top=" + top + ", width=640, height=480, menubar=no, resizable=yes, scrollbars=yes, status=no, toolbar=no");
        w.focus();
    }

    function openNewEmployeePicker() {
        var top = (window.event) ? window.event.screenY : 0;
        var left = (window.event) ? window.event.screenX : 0;
        #set($param="")
        var w = window.open("$history.ignore($link).baseURI$history.ignore($link.clear().setNavigationId('employeeMultiSelectForTask').setObjectId($position, $param))?callback=taskResourcePickerCallback",
                            "calendar",
                            "left=" + left + ", top=" + top + ", width=640, height=480, menubar=no, resizable=yes, scrollbars=yes, status=no, toolbar=no");
        w.focus();
    }

    function openPMRolePicker() {
        var top = (window.event) ? window.event.screenY : 0;
        var left = (window.event) ? window.event.screenX : 0;
        var w = window.open("$history.ignore($link).baseURI$history.ignore($link.clear().setNavigationId('pmRoleSelect'))?callback=taskResourcePickerCallback",
                            "calendar",
                            "left=" + left + ", top=" + top + ", width=640, height=480, menubar=no, resizable=yes, scrollbars=yes, status=no, toolbar=no");
        w.focus();
    }

    function taskResourcePickerCallback(countChecked, nameArray, idArray) {
        document.properties.taskResourceActionTaskResourceAdd.value+= " "; //To avoid taskResourceList.clear() on save
        for (i=0; i<countChecked; i++){
            document.properties.taskResourceActionTaskResourceAdd.value+=idArray[i] + ":";
        }
        document.properties.submit();
        return false;
    }

    function openBeginsPicker() {
        var top = (window.event) ? window.event.screenY : 0;
        var left = (window.event) ? window.event.screenX : 0;
        var w = windowOpen("$history.ignore($link).baseURI$history.ignore($link.clear().setNavigationId('calendar'))?disableTime=true&disableSecs=true&callback=beginsPickerCallback&defaultHour=$defaultHour&defaultMinute=$defaultMinute",
                            "calendar",
                            "left=" + left + ", top=" + top + ", width=215, height=200, menubar=no, resizable=yes, scrollbars=no, status=no, toolbar=no");
        w.focus();
    }

    function beginsPickerCallback(data) {
        document.properties.taskBegins.value = data;
    }

    function openEndsPicker() {
        var top = (window.event) ? window.event.screenY : 0;
        var left = (window.event) ? window.event.screenX : 0;
        var w = windowOpen("$history.ignore($link).baseURI$history.ignore($link.clear().setNavigationId('calendar'))?disableTime=true&disableSecs=true&callback=endsPickerCallback&defaultHour=$defaultHour&defaultMinute=$defaultMinute",
                            "calendar",
                            "left=" + left + ", top=" + top + ", width=215, height=200, menubar=no, resizable=yes, scrollbars=no, status=no, toolbar=no");
        w.focus();
    }

    function endsPickerCallback(data) {
        document.properties.taskEnds.value = data;
    }

    function openProjectPicker() {
        var top = (window.event) ? window.event.screenY : 0;
        var left = (window.event) ? window.event.screenX : 0;
        var w = window.open("$history.ignore($link).baseURI$history.ignore($link.clear().setNavigationId('projectSelect'))?callback=projectPickerCallback",
                            "labelProjectSelect",
                            "left=" + left + ", top=" + top + ", width=640, height=480, menubar=no, resizable=yes, scrollbars=yes, status=no, toolbar=no");
        w.focus();

    }

    function projectPickerCallback(id, label, data, businessUnitId, businessUnit) {
        document.properties.taskProjectId.value = id;
        document.properties.displayedValuetaskProject.value = label;
        document.properties.taskSuperTaskId.value = "";
        document.properties.displayedValuetaskSuperTask.value = "";
    }

    function openSuperTaskPicker() {
        var top = (window.event) ? window.event.screenY : 0;
        var left = (window.event) ? window.event.screenX : 0;
#if ($task.isNew())
        var w = window.open("$history.ignore($link).baseURI$history.ignore($link.clear().setNavigationId('taskSuperSelect'))?callback=superTaskPickerCallback",
                            "labelSuperTaskSelect",
                            "left=" + left + ", top=" + top + ", width=640, height=480, menubar=no, resizable=yes, scrollbars=yes, status=no, toolbar=no");
#else

        var w = window.open("$history.ignore($link).baseURI$history.ignore($link.clear().setNavigationId('taskSuperSelect').setObjectId($position, $task.id))?callback=superTaskPickerCallback",
                            "labelSuperTaskSelect",
                            "left=" + left + ", top=" + top + ", width=640, height=480, menubar=no, resizable=yes, scrollbars=yes, status=no, toolbar=no");


#end
        w.focus();

    }

    function superTaskPickerCallback(id, label, data, projectId, project, businessUnitId, businessUnit) {
        document.properties.taskSuperTaskId.value = id;
        document.properties.displayedValuetaskSuperTask.value = label;
#if ($task.isNew())
        document.properties.taskProjectId.value = "";
        document.properties.displayedValuetaskProject.value = "$labelProjectBySuperTask";
#end
    }

    function clearSuperTaskField(){
        document.properties.taskSuperTaskId.value = "";
        document.properties.displayedValuetaskSuperTask.value = "";
    }

    function openVicePMPicker() {
        var top = (window.event) ? window.event.screenY : 0;
        var left = (window.event) ? window.event.screenX : 0;
        #set($param="Role.projectSubLeader,$task.getProjectId()")
        var w = window.open("$history.ignore($link).baseURI$history.ignore($link.clear().setNavigationId('employeeSelect').setObjectId($position, $param))?callback=vicePMPickerCallback",
                            "labelVicePMSelect",
                            "left=" + left + ", top=" + top + ", width=640, height=480, menubar=no, resizable=yes, scrollbars=yes, status=no, toolbar=no");
        w.focus();

    }

    function vicePMPickerCallback(id, label, data) {
        document.properties.taskVicePMId.value = id;
        document.properties.displayedValuetaskVicePM.value = label;
    }

    function clearVicePMField(){
        document.properties.taskVicePMId.value = "";
        document.properties.displayedValuetaskVicePM.value = "";
    }
</script>
<div class="portlet">
    <form name="properties" action="$link.clear().setData('history/ignore').setNavigationId('taskProperties').setObjectId($position, $task.getId())" method="post">
        <input type="hidden" name="updateForm" value="update"/>
        <fieldset class="dialog">
            <legend>$labelTaskProperties</legend>
            <table><tr><td style="padding-right: 1cm; vertical-align:top">
            <p class="nowrap">
                <label>$task.labelName($locale)*:</label>
                <input type="text" name="taskName" value="$!task.nameAsString" size="40"/>
            </p>
#if ($errorMessage.hasAttibute("taskName"))
            <p class="nowrap">
                <span class="error">$errorMessage.forAttribute("taskName")</span>
            </p>
#end
            <p class="nowrap">
                <label>$task.labelDescription($locale):</label>
                <textarea name="taskDescription" cols="80" rows="6">$!task.descriptionAsString</textarea>
            </p>
#if ($errorMessage.hasAttibute("taskDescription"))
            <p class="nowrap">
                <span class="error">$errorMessage.forAttribute("taskDescription")</span>
</p>
#end
            <p class="nowrap">
                <label>$task.labelActive($locale)*:</label>
                <select name="taskActive" size="1">
                    <option value="true" #if($task.activeAsString == "true")selected#end>$labelYes</option>
                    <option value="false" #if($task.activeAsString == "false")selected#end>$labelNo</option>
                </select>
            </p>
#if ($errorMessage.hasAttibute("projectActive"))
            <p class="nowrap">
                <span class="error">$errorMessage.forAttribute("projectActive")</span>
            </p>
#end
            <p class="nowrap">
                <label>$task.labelProject($locale): </label>
                <input type="hidden" name="taskProjectId" value="$!$project.getId()"/>
#if ($task.isNew())
                $!omObjectFormatter.format($project.getOMObject(), $locale)
#else
                $!omObjectFormatter.format($task.project.getOMObject(), $locale)
#end
            </p>
#if ($errorMessage.hasAttibute("taskProject"))
            <p class="nowrap">
                <span class="error">$errorMessage.forAttribute("taskProject")</span>
            </p>
#end
            <p class="nowrap">
                <label>$task.labelSuperTask($locale):</label>
                <input type="hidden" name="taskSuperTaskId" value="$!task.getSuperTask().getId()"/>
                <input type="text" name="displayedValuetaskSuperTask" value="$!omObjectFormatter.format($task.superTask.getOMObject(), $locale)" size="40"/>
                #button($labelChoose '#' "openSuperTaskPicker(); return false;")
                #button($labelClear '#' "clearSuperTaskField(); return false;")
            </p>
#if ($errorMessage.hasAttibute("taskSuperTask"))
            <p class="nowrap">
                <span class="error">$errorMessage.forAttribute("taskSuperTask")</span>
            </p>
#end
##            <p class="nowrap">
##                <label>$task.labelVicePM($locale):</label>
##                <input type="hidden" name="taskVicePMId" value="$!task.getVicePM().getId()"/>
##                <input type="text" name="displayedValuetaskVicePM" value="$!omObjectFormatter.format($task.vicePM.getOMObject(), $locale)" size="40"/>
##                #button($labelChoose '#' "openVicePMPicker(); return false;")
##                #button($labelClear '#' "clearVicePMField(); return false;")
##            </p>
###if ($errorMessage.hasAttibute("taskVicePM"))
##            <p class="nowrap">
##                <span class="error">$errorMessage.forAttribute("taskVicePM")</span>
##            </p>
###end
            <p class="nowrap">
                <label>$task.labelPurchaseOrderNumber($locale):</label>
                <input type="text" name="taskPurchaseOrderNumber" value="$!task.purchaseOrderNumberAsString" size="40"/>
            </p>
            <p class="nowrap">
                <label>$task.labelWorkPackageNumber($locale):</label>
                <input type="text" name="taskWorkPackageNumber" value="$!task.workPackageNumberAsString" size="40"/>
            </p>
        <p class="nowrap">
            <label>$task.labelBegins($locale)*:</label>
#if(!$task.hasChildren())
    #if($task.isNew())
            <input type="text" name="taskBegins" value="$!task.dateAsString" size="20"/>
            #button('...' '#' "openBeginsPicker(); return false;")
    #else
            <input type="text" name="taskBegins" value="$!task.beginsAsString" size="20"/>
            #button('...' '#' "openBeginsPicker(); return false;")
    #end
#else
            $!task.beginsAsString
#end
        </p>
#if ($errorMessage.hasAttibute("taskBegins"))
        <p class="nowrap">
            <span class="error">$errorMessage.forAttribute("taskBegins")</span>
        </p>
#end
        <p class="nowrap">
            <label>$task.labelEnds($locale):</label>
#if(!$task.hasChildren())
            <input type="text" name="taskEnds" value="$!task.endsAsString" size="20"/>
            #button('...' '#' "openEndsPicker(); return false;")
#else
            $!task.endsAsString
#end
        </p>
#if ($errorMessage.hasAttibute("taskEnds"))
        <p class="nowrap">
            <span class="error">$errorMessage.forAttribute("taskEnds")</span>
        </p>
#end
        <p class="nowrap">
            <label>$task.labelPlannedWork($locale)*:</label>
#if(!$task.hasChildren())
            <input type="text" name="taskPlannedWork" value="$!task.plannedWorkAsString" size="10"/>
#else
            $!task.plannedWorkAsString
#end
        </p>
#if ($errorMessage.hasAttibute("taskPlannedWork"))
        <p class="nowrap">
            <span class="error">$errorMessage.forAttribute("taskPlannedWork")</span>
        </p>
#end
        </td>
        <td style="border-left:0.2cm solid #0068C3; padding-left: 0.5cm; padding-top:0.1cm; vertical-align:top">
#if(!$task.hasChildren())
            <fieldset>
                <legend>$labelTaskResource:</legend>
        #if($task.taskResourceList.size() > 0)
                        <ul>
            #foreach ($taskResource in $task.taskResourceList)
                #set($type="$taskResource.resourceInstance.typeName")
                            <input type="hidden" name="taskResource_${counter}_ResourceId" value="$!taskResource.resource.id" size="40" />
                            <li>
                                <div name="diplayedValueTaskResource_$counter">$!omObjectFormatter.format($taskResource.resource, $locale)</div><br />
                            </li>
            #end
                        </ul>
        #else
                        <br />
        #end
                        <fieldset>
                            <legend>$labelProjectResource</legend><br />
                            #button("$labelAddTaskResource" '#' "openEmployeePicker(); return false;")
                            <br />
                        </fieldset>
                        <fieldset>
                            <legend>$OptionalProjectResource</legend><br />
                            #button("$labelAddNewTaskResource" '#' "openNewEmployeePicker(); return false;")
                            <br />
                        </fieldset>
            </fieldset>
            <input type="hidden" name="taskResourceActionTaskResourceAdd" value="" />

#end
#if ($errorMessage.hasGeneral())
            <p class="nowrap">
                <span class="error">$errorMessage.getGeneral()</span>
            </p>
#end
            </td></tr></table>
        </fieldset>
        <fieldset class="operation">
            <legend>$labelActions</legend>
                <p>
#set($editPerm = ($task.ExistInOMS  && (($ams.may("actionProjectEditOwnTask") && ($pMUser.employee.id==$project.projectmanager.id || $pMUser.employee.id==$project.projectofficer.id  || $task.isSuperVicePM($pMUser.employee.id))) || $ams.may("actionProjectEditOthersTask"))))
#set($newPerm = (!$task.ExistInOMS && (($ams.may("actionProjectEditOwnProject") && ($pMUser.employee.id==$project.projectmanager.id || $pMUser.employee.id==$project.projectofficer.id || $task.isSuperVicePM($pMUser.employee.id))) || $ams.may("actionProjectEditOthersProject"))))
#if ($editPerm || $newPerm || $task.isNew)
                    #buttonAccept($labelSave '#' "document.properties.action = '$history.ignore($link.setOperation($position,'taskSave').setObjectId($position, $task.id))'; document.properties.submit(); return false;")
#end
#if ($task.ExistInOMS && (($ams.may("actionProjectEditOwnProject") && ($pMUser.employee.id==$task.project.projectmanager.id || $pMUser.employee.id==$task.project.projectofficer.id || $task.isSuperVicePM($pMUser.employee.id))) || $ams.may("actionProjectEditOthersProject")))
                    #buttonDeny($labelDelete '#' "if(confirm('$confirmDeleteTask')) {document.properties.action = '$history.ignore($link.setObjectId($position, $task.id).setOperation($position,'taskDelete'))'; document.properties.submit();} return false;")
#end
                    #button($labelCancel '#' "document.properties.action = '$history.back()'; document.properties.submit(); return false;")
                </p>
        </fieldset>
    </form>
</div>
